// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Download Clients -->Download Client Freebox resource.
 * For more information refer to [Download Client](https://wiki.servarr.com/radarr/settings#download-clients) and [Freebox](https://wiki.servarr.com/radarr/supported#torrentfreeboxdownload).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as radarr from "@maienm/pulumi-radarr";
 *
 * const example = new radarr.downloadclients.DownloadClientFreebox("example", {
 *     apiUrl: "/api/v1/",
 *     appId: "freebox",
 *     appToken: "Token123",
 *     enable: true,
 *     host: "mafreebox.freebox.fr",
 *     name: "Example",
 *     port: 443,
 *     priority: 1,
 * });
 * ```
 *
 * ## Import
 *
 * import using the API/UI ID
 *
 * ```sh
 *  $ pulumi import radarr:DownloadClients/downloadClientFreebox:DownloadClientFreebox example 1
 * ```
 */
export class DownloadClientFreebox extends pulumi.CustomResource {
    /**
     * Get an existing DownloadClientFreebox resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DownloadClientFreeboxState, opts?: pulumi.CustomResourceOptions): DownloadClientFreebox {
        return new DownloadClientFreebox(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'radarr:DownloadClients/downloadClientFreebox:DownloadClientFreebox';

    /**
     * Returns true if the given object is an instance of DownloadClientFreebox.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DownloadClientFreebox {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DownloadClientFreebox.__pulumiType;
    }

    /**
     * Add paused flag.
     */
    public readonly addPaused!: pulumi.Output<boolean>;
    /**
     * API URL.
     */
    public readonly apiUrl!: pulumi.Output<string>;
    /**
     * App ID.
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * App Token.
     */
    public readonly appToken!: pulumi.Output<string>;
    /**
     * category.
     */
    public readonly category!: pulumi.Output<string>;
    /**
     * Movie directory.
     */
    public readonly destinationDirectory!: pulumi.Output<string>;
    /**
     * Enable flag.
     */
    public readonly enable!: pulumi.Output<boolean>;
    /**
     * host.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * Download Client name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Older Movie priority. `0` Last, `1` First.
     */
    public readonly olderPriority!: pulumi.Output<number>;
    /**
     * Port.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Priority.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * Recent Movie priority. `0` Last, `1` First.
     */
    public readonly recentPriority!: pulumi.Output<number>;
    /**
     * Remove completed downloads flag.
     */
    public readonly removeCompletedDownloads!: pulumi.Output<boolean>;
    /**
     * Remove failed downloads flag.
     */
    public readonly removeFailedDownloads!: pulumi.Output<boolean>;
    /**
     * List of associated tags.
     */
    public readonly tags!: pulumi.Output<number[]>;
    /**
     * Use SSL flag.
     */
    public readonly useSsl!: pulumi.Output<boolean>;

    /**
     * Create a DownloadClientFreebox resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DownloadClientFreeboxArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DownloadClientFreeboxArgs | DownloadClientFreeboxState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DownloadClientFreeboxState | undefined;
            resourceInputs["addPaused"] = state ? state.addPaused : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["appToken"] = state ? state.appToken : undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["destinationDirectory"] = state ? state.destinationDirectory : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["olderPriority"] = state ? state.olderPriority : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["recentPriority"] = state ? state.recentPriority : undefined;
            resourceInputs["removeCompletedDownloads"] = state ? state.removeCompletedDownloads : undefined;
            resourceInputs["removeFailedDownloads"] = state ? state.removeFailedDownloads : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["useSsl"] = state ? state.useSsl : undefined;
        } else {
            const args = argsOrState as DownloadClientFreeboxArgs | undefined;
            if ((!args || args.apiUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiUrl'");
            }
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            if ((!args || args.appToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appToken'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            resourceInputs["addPaused"] = args ? args.addPaused : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["appToken"] = args?.appToken ? pulumi.secret(args.appToken) : undefined;
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["destinationDirectory"] = args ? args.destinationDirectory : undefined;
            resourceInputs["enable"] = args ? args.enable : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["olderPriority"] = args ? args.olderPriority : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["recentPriority"] = args ? args.recentPriority : undefined;
            resourceInputs["removeCompletedDownloads"] = args ? args.removeCompletedDownloads : undefined;
            resourceInputs["removeFailedDownloads"] = args ? args.removeFailedDownloads : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["useSsl"] = args ? args.useSsl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["appToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DownloadClientFreebox.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DownloadClientFreebox resources.
 */
export interface DownloadClientFreeboxState {
    /**
     * Add paused flag.
     */
    addPaused?: pulumi.Input<boolean>;
    /**
     * API URL.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * App ID.
     */
    appId?: pulumi.Input<string>;
    /**
     * App Token.
     */
    appToken?: pulumi.Input<string>;
    /**
     * category.
     */
    category?: pulumi.Input<string>;
    /**
     * Movie directory.
     */
    destinationDirectory?: pulumi.Input<string>;
    /**
     * Enable flag.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * host.
     */
    host?: pulumi.Input<string>;
    /**
     * Download Client name.
     */
    name?: pulumi.Input<string>;
    /**
     * Older Movie priority. `0` Last, `1` First.
     */
    olderPriority?: pulumi.Input<number>;
    /**
     * Port.
     */
    port?: pulumi.Input<number>;
    /**
     * Priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Recent Movie priority. `0` Last, `1` First.
     */
    recentPriority?: pulumi.Input<number>;
    /**
     * Remove completed downloads flag.
     */
    removeCompletedDownloads?: pulumi.Input<boolean>;
    /**
     * Remove failed downloads flag.
     */
    removeFailedDownloads?: pulumi.Input<boolean>;
    /**
     * List of associated tags.
     */
    tags?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Use SSL flag.
     */
    useSsl?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a DownloadClientFreebox resource.
 */
export interface DownloadClientFreeboxArgs {
    /**
     * Add paused flag.
     */
    addPaused?: pulumi.Input<boolean>;
    /**
     * API URL.
     */
    apiUrl: pulumi.Input<string>;
    /**
     * App ID.
     */
    appId: pulumi.Input<string>;
    /**
     * App Token.
     */
    appToken: pulumi.Input<string>;
    /**
     * category.
     */
    category?: pulumi.Input<string>;
    /**
     * Movie directory.
     */
    destinationDirectory?: pulumi.Input<string>;
    /**
     * Enable flag.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * host.
     */
    host: pulumi.Input<string>;
    /**
     * Download Client name.
     */
    name: pulumi.Input<string>;
    /**
     * Older Movie priority. `0` Last, `1` First.
     */
    olderPriority?: pulumi.Input<number>;
    /**
     * Port.
     */
    port: pulumi.Input<number>;
    /**
     * Priority.
     */
    priority?: pulumi.Input<number>;
    /**
     * Recent Movie priority. `0` Last, `1` First.
     */
    recentPriority?: pulumi.Input<number>;
    /**
     * Remove completed downloads flag.
     */
    removeCompletedDownloads?: pulumi.Input<boolean>;
    /**
     * Remove failed downloads flag.
     */
    removeFailedDownloads?: pulumi.Input<boolean>;
    /**
     * List of associated tags.
     */
    tags?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Use SSL flag.
     */
    useSsl?: pulumi.Input<boolean>;
}
