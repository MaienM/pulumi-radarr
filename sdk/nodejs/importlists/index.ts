// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetImportListArgs, GetImportListResult, GetImportListOutputArgs } from "./getImportList";
export const getImportList: typeof import("./getImportList").getImportList = null as any;
export const getImportListOutput: typeof import("./getImportList").getImportListOutput = null as any;
utilities.lazyLoad(exports, ["getImportList","getImportListOutput"], () => require("./getImportList"));

export { GetImportListConfigResult } from "./getImportListConfig";
export const getImportListConfig: typeof import("./getImportListConfig").getImportListConfig = null as any;
utilities.lazyLoad(exports, ["getImportListConfig"], () => require("./getImportListConfig"));

export { GetImportListExclusionArgs, GetImportListExclusionResult, GetImportListExclusionOutputArgs } from "./getImportListExclusion";
export const getImportListExclusion: typeof import("./getImportListExclusion").getImportListExclusion = null as any;
export const getImportListExclusionOutput: typeof import("./getImportListExclusion").getImportListExclusionOutput = null as any;
utilities.lazyLoad(exports, ["getImportListExclusion","getImportListExclusionOutput"], () => require("./getImportListExclusion"));

export { GetImportListExclusionsResult } from "./getImportListExclusions";
export const getImportListExclusions: typeof import("./getImportListExclusions").getImportListExclusions = null as any;
utilities.lazyLoad(exports, ["getImportListExclusions"], () => require("./getImportListExclusions"));

export { GetImportListsResult } from "./getImportLists";
export const getImportLists: typeof import("./getImportLists").getImportLists = null as any;
utilities.lazyLoad(exports, ["getImportLists"], () => require("./getImportLists"));

export { ImportListArgs, ImportListState } from "./importList";
export type ImportList = import("./importList").ImportList;
export const ImportList: typeof import("./importList").ImportList = null as any;
utilities.lazyLoad(exports, ["ImportList"], () => require("./importList"));

export { ImportListConfigArgs, ImportListConfigState } from "./importListConfig";
export type ImportListConfig = import("./importListConfig").ImportListConfig;
export const ImportListConfig: typeof import("./importListConfig").ImportListConfig = null as any;
utilities.lazyLoad(exports, ["ImportListConfig"], () => require("./importListConfig"));

export { ImportListCouchPotatoArgs, ImportListCouchPotatoState } from "./importListCouchPotato";
export type ImportListCouchPotato = import("./importListCouchPotato").ImportListCouchPotato;
export const ImportListCouchPotato: typeof import("./importListCouchPotato").ImportListCouchPotato = null as any;
utilities.lazyLoad(exports, ["ImportListCouchPotato"], () => require("./importListCouchPotato"));

export { ImportListCustomArgs, ImportListCustomState } from "./importListCustom";
export type ImportListCustom = import("./importListCustom").ImportListCustom;
export const ImportListCustom: typeof import("./importListCustom").ImportListCustom = null as any;
utilities.lazyLoad(exports, ["ImportListCustom"], () => require("./importListCustom"));

export { ImportListExclusionArgs, ImportListExclusionState } from "./importListExclusion";
export type ImportListExclusion = import("./importListExclusion").ImportListExclusion;
export const ImportListExclusion: typeof import("./importListExclusion").ImportListExclusion = null as any;
utilities.lazyLoad(exports, ["ImportListExclusion"], () => require("./importListExclusion"));

export { ImportListImdbArgs, ImportListImdbState } from "./importListImdb";
export type ImportListImdb = import("./importListImdb").ImportListImdb;
export const ImportListImdb: typeof import("./importListImdb").ImportListImdb = null as any;
utilities.lazyLoad(exports, ["ImportListImdb"], () => require("./importListImdb"));

export { ImportListPlexArgs, ImportListPlexState } from "./importListPlex";
export type ImportListPlex = import("./importListPlex").ImportListPlex;
export const ImportListPlex: typeof import("./importListPlex").ImportListPlex = null as any;
utilities.lazyLoad(exports, ["ImportListPlex"], () => require("./importListPlex"));

export { ImportListRadarrArgs, ImportListRadarrState } from "./importListRadarr";
export type ImportListRadarr = import("./importListRadarr").ImportListRadarr;
export const ImportListRadarr: typeof import("./importListRadarr").ImportListRadarr = null as any;
utilities.lazyLoad(exports, ["ImportListRadarr"], () => require("./importListRadarr"));

export { ImportListRssArgs, ImportListRssState } from "./importListRss";
export type ImportListRss = import("./importListRss").ImportListRss;
export const ImportListRss: typeof import("./importListRss").ImportListRss = null as any;
utilities.lazyLoad(exports, ["ImportListRss"], () => require("./importListRss"));

export { ImportListStevenluArgs, ImportListStevenluState } from "./importListStevenlu";
export type ImportListStevenlu = import("./importListStevenlu").ImportListStevenlu;
export const ImportListStevenlu: typeof import("./importListStevenlu").ImportListStevenlu = null as any;
utilities.lazyLoad(exports, ["ImportListStevenlu"], () => require("./importListStevenlu"));

export { ImportListStevenlu2Args, ImportListStevenlu2State } from "./importListStevenlu2";
export type ImportListStevenlu2 = import("./importListStevenlu2").ImportListStevenlu2;
export const ImportListStevenlu2: typeof import("./importListStevenlu2").ImportListStevenlu2 = null as any;
utilities.lazyLoad(exports, ["ImportListStevenlu2"], () => require("./importListStevenlu2"));

export { ImportListTmdbCompanyArgs, ImportListTmdbCompanyState } from "./importListTmdbCompany";
export type ImportListTmdbCompany = import("./importListTmdbCompany").ImportListTmdbCompany;
export const ImportListTmdbCompany: typeof import("./importListTmdbCompany").ImportListTmdbCompany = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbCompany"], () => require("./importListTmdbCompany"));

export { ImportListTmdbKeywordArgs, ImportListTmdbKeywordState } from "./importListTmdbKeyword";
export type ImportListTmdbKeyword = import("./importListTmdbKeyword").ImportListTmdbKeyword;
export const ImportListTmdbKeyword: typeof import("./importListTmdbKeyword").ImportListTmdbKeyword = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbKeyword"], () => require("./importListTmdbKeyword"));

export { ImportListTmdbListArgs, ImportListTmdbListState } from "./importListTmdbList";
export type ImportListTmdbList = import("./importListTmdbList").ImportListTmdbList;
export const ImportListTmdbList: typeof import("./importListTmdbList").ImportListTmdbList = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbList"], () => require("./importListTmdbList"));

export { ImportListTmdbPersonArgs, ImportListTmdbPersonState } from "./importListTmdbPerson";
export type ImportListTmdbPerson = import("./importListTmdbPerson").ImportListTmdbPerson;
export const ImportListTmdbPerson: typeof import("./importListTmdbPerson").ImportListTmdbPerson = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbPerson"], () => require("./importListTmdbPerson"));

export { ImportListTmdbPopularArgs, ImportListTmdbPopularState } from "./importListTmdbPopular";
export type ImportListTmdbPopular = import("./importListTmdbPopular").ImportListTmdbPopular;
export const ImportListTmdbPopular: typeof import("./importListTmdbPopular").ImportListTmdbPopular = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbPopular"], () => require("./importListTmdbPopular"));

export { ImportListTmdbUserArgs, ImportListTmdbUserState } from "./importListTmdbUser";
export type ImportListTmdbUser = import("./importListTmdbUser").ImportListTmdbUser;
export const ImportListTmdbUser: typeof import("./importListTmdbUser").ImportListTmdbUser = null as any;
utilities.lazyLoad(exports, ["ImportListTmdbUser"], () => require("./importListTmdbUser"));

export { ImportListTraktListArgs, ImportListTraktListState } from "./importListTraktList";
export type ImportListTraktList = import("./importListTraktList").ImportListTraktList;
export const ImportListTraktList: typeof import("./importListTraktList").ImportListTraktList = null as any;
utilities.lazyLoad(exports, ["ImportListTraktList"], () => require("./importListTraktList"));

export { ImportListTraktPopularArgs, ImportListTraktPopularState } from "./importListTraktPopular";
export type ImportListTraktPopular = import("./importListTraktPopular").ImportListTraktPopular;
export const ImportListTraktPopular: typeof import("./importListTraktPopular").ImportListTraktPopular = null as any;
utilities.lazyLoad(exports, ["ImportListTraktPopular"], () => require("./importListTraktPopular"));

export { ImportListTraktUserArgs, ImportListTraktUserState } from "./importListTraktUser";
export type ImportListTraktUser = import("./importListTraktUser").ImportListTraktUser;
export const ImportListTraktUser: typeof import("./importListTraktUser").ImportListTraktUser = null as any;
utilities.lazyLoad(exports, ["ImportListTraktUser"], () => require("./importListTraktUser"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "radarr:ImportLists/importList:ImportList":
                return new ImportList(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListConfig:ImportListConfig":
                return new ImportListConfig(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListCouchPotato:ImportListCouchPotato":
                return new ImportListCouchPotato(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListCustom:ImportListCustom":
                return new ImportListCustom(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListExclusion:ImportListExclusion":
                return new ImportListExclusion(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListImdb:ImportListImdb":
                return new ImportListImdb(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListPlex:ImportListPlex":
                return new ImportListPlex(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListRadarr:ImportListRadarr":
                return new ImportListRadarr(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListRss:ImportListRss":
                return new ImportListRss(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListStevenlu2:ImportListStevenlu2":
                return new ImportListStevenlu2(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListStevenlu:ImportListStevenlu":
                return new ImportListStevenlu(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbCompany:ImportListTmdbCompany":
                return new ImportListTmdbCompany(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbKeyword:ImportListTmdbKeyword":
                return new ImportListTmdbKeyword(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbList:ImportListTmdbList":
                return new ImportListTmdbList(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbPerson:ImportListTmdbPerson":
                return new ImportListTmdbPerson(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbPopular:ImportListTmdbPopular":
                return new ImportListTmdbPopular(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTmdbUser:ImportListTmdbUser":
                return new ImportListTmdbUser(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTraktList:ImportListTraktList":
                return new ImportListTraktList(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTraktPopular:ImportListTraktPopular":
                return new ImportListTraktPopular(name, <any>undefined, { urn })
            case "radarr:ImportLists/importListTraktUser:ImportListTraktUser":
                return new ImportListTraktUser(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importList", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListConfig", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListCouchPotato", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListCustom", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListExclusion", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListImdb", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListPlex", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListRadarr", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListRss", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListStevenlu", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListStevenlu2", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbCompany", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbKeyword", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbList", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbPerson", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbPopular", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTmdbUser", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTraktList", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTraktPopular", _module)
pulumi.runtime.registerResourceModule("radarr", "ImportLists/importListTraktUser", _module)
